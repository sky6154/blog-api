buildscript {
    ext {
        springBootVersion = '2.1.4.RELEASE'
        queryDslPluginVersion = '1.0.10'
    }
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${queryDslPluginVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

group = 'blog.develobeer'
version = 'latest'
//sourceCompatibility = '11'

bootJar{
    project.ext.set("archiveBaseName", "develobeer-admin");
    project.ext.set("archiveVersion", "lastest");
    baseName = 'develobeer-admin'
}

repositories {
    mavenCentral()
}

def queryDslGeneratedDir = 'src/main/generated'

querydsl {
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = queryDslGeneratedDir
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java', queryDslGeneratedDir]
        }
    }
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    annotationProcessor("org.projectlombok:lombok:")
    compileOnly("org.projectlombok:lombok")
    compile("mysql:mysql-connector-java")

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')

    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'

    compile("org.springframework.boot:spring-boot-starter-hateoas")

    compile("com.querydsl:querydsl-jpa")
    compile("com.querydsl:querydsl-apt")

    compile group: 'org.xmlbeam', name: 'xmlprojector', version: '1.4.16'

    compile('org.apache.commons:commons-exec:1.3')
}

wrapper {
    gradleVersion = '5.4.1' //we want gradle version to run this project
    distributionUrl = distributionUrl.replace("bin", "all")
}


compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}